{"abi":[{"type":"function","name":"claim","inputs":[{"name":"message","type":"bytes32","internalType":"bytes32"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasClaimed","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b506102558061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806309c8d1731461003b57806373b2e80e14610050575b600080fd5b61004e6100493660046101ac565b610087565b005b61007361005e3660046101ef565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b3360009081526020819052604090205460ff16156100de5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064015b60405180910390fd5b6040805160008082526020820180845287905260ff861692820192909252606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610132573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116331461018b5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064016100d5565b5050336000908152602081905260409020805460ff19166001179055505050565b600080600080608085870312156101c257600080fd5b84359350602085013560ff811681146101da57600080fd5b93969395505050506040820135916060013590565b60006020828403121561020157600080fd5b81356001600160a01b038116811461021857600080fd5b939250505056fea2646970667358221220b794c75ef589564182af91f4e601b9625a2585cc58a95551d78cbc2ace85450e64736f6c634300081b0033","sourceMap":"350:1293:21:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100365760003560e01c806309c8d1731461003b57806373b2e80e14610050575b600080fd5b61004e6100493660046101ac565b610087565b005b61007361005e3660046101ef565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b3360009081526020819052604090205460ff16156100de5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064015b60405180910390fd5b6040805160008082526020820180845287905260ff861692820192909252606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610132573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116331461018b5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064016100d5565b5050336000908152602081905260409020805460ff19166001179055505050565b600080600080608085870312156101c257600080fd5b84359350602085013560ff811681146101da57600080fd5b93969395505050506040820135916060013590565b60006020828403121561020157600080fd5b81356001600160a01b038116811461021857600080fd5b939250505056fea2646970667358221220b794c75ef589564182af91f4e601b9625a2585cc58a95551d78cbc2ace85450e64736f6c634300081b0033","sourceMap":"350:1293:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:589;;;;;;:::i;:::-;;:::i;:::-;;464:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1107:14:23;;1100:22;1082:41;;1070:2;1055:18;464:42:21;;;;;;;1052:589;1207:10;1196;:22;;;;;;;;;;;;;1195:23;1187:51;;;;-1:-1:-1;;;1187:51:21;;1336:2:23;1187:51:21;;;1318:21:23;1375:2;1355:18;;;1348:30;-1:-1:-1;;;1394:18:23;;;1387:45;1449:18;;1187:51:21;;;;;;;;;1321:27;;;1304:14;1321:27;;;;;;;;;1705:25:23;;;1778:4;1766:17;;1746:18;;;1739:45;;;;1800:18;;;1793:34;;;1843:18;;;1836:34;;;1321:27:21;;1677:19:23;;1321:27:21;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1321:27:21;;-1:-1:-1;;1321:27:21;;;-1:-1:-1;;;;;;;1429:20:21;;1439:10;1429:20;1421:50;;;;-1:-1:-1;;;1421:50:21;;2083:2:23;1421:50:21;;;2065:21:23;2122:2;2102:18;;;2095:30;-1:-1:-1;;;2141:18:23;;;2134:47;2198:18;;1421:50:21;1881:341:23;1421:50:21;-1:-1:-1;;1538:10:21;1527;:22;;;;;;;;;;:29;;-1:-1:-1;;1527:29:21;1552:4;1527:29;;;-1:-1:-1;;;1052:589:21:o;14:632:23:-;98:6;106;114;122;175:3;163:9;154:7;150:23;146:33;143:53;;;192:1;189;182:12;143:53;237:23;;;-1:-1:-1;336:2:23;321:18;;308:32;384:4;371:18;;359:31;;349:59;;404:1;401;394:12;349:59;14:632;;427:7;;-1:-1:-1;;;;507:2:23;492:18;;479:32;;610:2;595:18;582:32;;14:632::o;651:286::-;710:6;763:2;751:9;742:7;738:23;734:32;731:52;;;779:1;776;769:12;731:52;805:23;;-1:-1:-1;;;;;857:31:23;;847:42;;837:70;;903:1;900;893:12;837:70;926:5;651:286;-1:-1:-1;;;651:286:23:o","linkReferences":{}},"methodIdentifiers":{"claim(bytes32,uint8,bytes32,bytes32)":"09c8d173","hasClaimed(address)":"73b2e80e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"message\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Uses raw message hashes without EIP-191 prefixing or contextual binding (e.g., chain ID, contract address)\",\"kind\":\"dev\",\"methods\":{\"claim(bytes32,uint8,bytes32,bytes32)\":{\"details\":\"The message must be keccak256(abi.encodePacked(userAddress)), signed off-chain      This verification is insecure because the same signature can be replayed on other contracts or chains\",\"params\":{\"message\":\"A raw message hash signed off-chain, usually keccak256(abi.encodePacked(userAddress))\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature (27 or 28)\"}}},\"title\":\"Vulnerable Signature Claim Contract (Insecure Version)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(bytes32,uint8,bytes32,bytes32)\":{\"notice\":\"Verifies a claim using a raw signed message\"},\"hasClaimed(address)\":{\"notice\":\"Tracks whether an address has already claimed in this contract instance\"}},\"notice\":\"This contract demonstrates an insecure signature verification that is vulnerable to replay attacks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Vulnerable0x45.sol\":\"Vulnerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/Vulnerable0x45.sol\":{\"keccak256\":\"0xfd15e03aa30050e4953b199a227886e19b74294eda945d2db09982664b303ead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e07224d54382ba33fa6a2f1c7e03177d2b12d863faa0ab10ad63612218f5f226\",\"dweb:/ipfs/QmXhwykcZrZBAuoLfkdq5eHLjkB2pQwcFDDn4hikAi96X5\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"message","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"claim"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"hasClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"claim(bytes32,uint8,bytes32,bytes32)":{"details":"The message must be keccak256(abi.encodePacked(userAddress)), signed off-chain      This verification is insecure because the same signature can be replayed on other contracts or chains","params":{"message":"A raw message hash signed off-chain, usually keccak256(abi.encodePacked(userAddress))","r":"Half of the ECDSA signature pair","s":"Half of the ECDSA signature pair","v":"The recovery byte of the signature (27 or 28)"}}},"version":1},"userdoc":{"kind":"user","methods":{"claim(bytes32,uint8,bytes32,bytes32)":{"notice":"Verifies a claim using a raw signed message"},"hasClaimed(address)":{"notice":"Tracks whether an address has already claimed in this contract instance"}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/Vulnerable0x45.sol":"Vulnerable"},"evmVersion":"paris","libraries":{}},"sources":{"src/Vulnerable0x45.sol":{"keccak256":"0xfd15e03aa30050e4953b199a227886e19b74294eda945d2db09982664b303ead","urls":["bzz-raw://e07224d54382ba33fa6a2f1c7e03177d2b12d863faa0ab10ad63612218f5f226","dweb:/ipfs/QmXhwykcZrZBAuoLfkdq5eHLjkB2pQwcFDDn4hikAi96X5"],"license":"MIT"}},"version":1},"id":21}