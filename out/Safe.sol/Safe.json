{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"claim","inputs":[{"name":"rawMessage","type":"bytes32","internalType":"bytes32"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasClaimed","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b50466001556102c6806100236000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806309c8d1731461004657806373b2e80e1461005b5780639a8a059214610093575b600080fd5b61005961005436600461021d565b6100aa565b005b61007e610069366004610260565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61009c60015481565b60405190815260200161008a565b3360009081526020819052604090205460ff16156101015760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064015b60405180910390fd5b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101859052600090605c0160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156101a2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811633146101fb5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064016100f8565b5050336000908152602081905260409020805460ff1916600117905550505050565b6000806000806080858703121561023357600080fd5b84359350602085013560ff8116811461024b57600080fd5b93969395505050506040820135916060013590565b60006020828403121561027257600080fd5b81356001600160a01b038116811461028957600080fd5b939250505056fea2646970667358221220d946d896c80ff60ca603340e5b65e2dcec57a7a3536e984baccbb72592e3d2cb64736f6c634300081b0033","sourceMap":"275:1705:18:-:0;;;698:54;;;;;;;;;-1:-1:-1;732:13:18;722:7;:23;275:1705;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100415760003560e01c806309c8d1731461004657806373b2e80e1461005b5780639a8a059214610093575b600080fd5b61005961005436600461021d565b6100aa565b005b61007e610069366004610260565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61009c60015481565b60405190815260200161008a565b3360009081526020819052604090205460ff16156101015760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064015b60405180910390fd5b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101859052600090605c0160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156101a2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811633146101fb5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064016100f8565b5050336000908152602081905260409020805460ff1916600117905550505050565b6000806000806080858703121561023357600080fd5b84359350602085013560ff8116811461024b57600080fd5b93969395505050506040820135916060013590565b60006020828403121561027257600080fd5b81356001600160a01b038116811461028957600080fd5b939250505056fea2646970667358221220d946d896c80ff60ca603340e5b65e2dcec57a7a3536e984baccbb72592e3d2cb64736f6c634300081b0033","sourceMap":"275:1705:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1234:744;;;;;;:::i;:::-;;:::i;:::-;;357:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1107:14:21;;1100:22;1082:41;;1070:2;1055:18;357:42:18;;;;;;;;486:22;;;;;;;;;1280:25:21;;;1268:2;1253:18;486:22:18;1134:177:21;1234:744:18;1396:10;1385;:22;;;;;;;;;;;;;1384:23;1376:51;;;;-1:-1:-1;;;1376:51:18;;1518:2:21;1376:51:18;;;1500:21:21;1557:2;1537:18;;;1530:30;-1:-1:-1;;;1576:18:21;;;1569:45;1631:18;;1376:51:18;;;;;;;;;1567:64;;1902:66:21;1567:64:18;;;1890:79:21;1985:12;;;1978:28;;;1521:20:18;;2022:12:21;;1567:64:18;;;-1:-1:-1;;1567:64:18;;;;;;;;;1544:97;;1567:64;1544:97;;;;1709:14;1726:32;;;;;;;;;2272:25:21;;;2345:4;2333:17;;2313:18;;;2306:45;;;;2367:18;;;2360:34;;;2410:18;;;2403:34;;;1544:97:18;;-1:-1:-1;1709:14:18;1726:32;;2244:19:21;;1726:32:18;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1726:32:18;;-1:-1:-1;;1726:32:18;;;-1:-1:-1;;;;;;;1843:20:18;;1853:10;1843:20;1835:50;;;;-1:-1:-1;;;1835:50:18;;2650:2:21;1835:50:18;;;2632:21:21;2689:2;2669:18;;;2662:30;-1:-1:-1;;;2708:18:21;;;2701:47;2765:18;;1835:50:18;2448:341:21;1835:50:18;-1:-1:-1;;1953:10:18;1942;:22;;;;;;;;;;:29;;-1:-1:-1;;1942:29:18;1967:4;1942:29;;;-1:-1:-1;;;;1234:744:18:o;14:632:21:-;98:6;106;114;122;175:3;163:9;154:7;150:23;146:33;143:53;;;192:1;189;182:12;143:53;237:23;;;-1:-1:-1;336:2:21;321:18;;308:32;384:4;371:18;;359:31;;349:59;;404:1;401;394:12;349:59;14:632;;427:7;;-1:-1:-1;;;;507:2:21;492:18;;479:32;;610:2;595:18;582:32;;14:632::o;651:286::-;710:6;763:2;751:9;742:7;738:23;734:32;731:52;;;779:1;776;769:12;731:52;805:23;;-1:-1:-1;;;;;857:31:21;;847:42;;837:70;;903:1;900;893:12;837:70;926:5;651:286;-1:-1:-1;;;651:286:21:o","linkReferences":{}},"methodIdentifiers":{"chainId()":"9a8a0592","claim(bytes32,uint8,bytes32,bytes32)":"09c8d173","hasClaimed(address)":"73b2e80e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rawMessage\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@notice Prevents replay attacks by requiring signatures to include chain ID and contract address\",\"details\":\"Uses EIP-191 prefixing for secure message verification\",\"kind\":\"dev\",\"methods\":{\"claim(bytes32,uint8,bytes32,bytes32)\":{\"details\":\"Requires an EIP-191 prefixed message containing the chain ID, contract address, and user address\",\"params\":{\"r\":\"Half of the ECDSA signature pair\",\"rawMessage\":\"The original message hash (without the Ethereum signed prefix) that was signed\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"constructor\":{\"details\":\"This chain ID must be included in the off-chain signed message to prevent replay across chains\"}},\"title\":\"Safe Signature Claim Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"chainId()\":{\"notice\":\"The chain ID stored at deployment to include in signed messages\"},\"claim(bytes32,uint8,bytes32,bytes32)\":{\"notice\":\"Verifies a claim by checking the signature against the expected signer and message structure\"},\"constructor\":{\"notice\":\"Initializes the contract and captures the current chain ID\"},\"hasClaimed(address)\":{\"notice\":\"Tracks whether an address has already claimed\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Safe.sol\":\"Safe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/Safe.sol\":{\"keccak256\":\"0xbab61e5b0e63fbec17373bf15aa2d09960bbfd4b768e3c0932f0b485ef077199\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://385e8798ca4f5c62cd3ea72d41db6096f6c7fd9c1e6b3d44dd653bf45c16b6f8\",\"dweb:/ipfs/Qme3ftS4NsK6js9Bi1DoAxQFqbgcvtCJh47ReTVk9xU3i7\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"stateMutability":"view","type":"function","name":"chainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"rawMessage","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"claim"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"hasClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"claim(bytes32,uint8,bytes32,bytes32)":{"details":"Requires an EIP-191 prefixed message containing the chain ID, contract address, and user address","params":{"r":"Half of the ECDSA signature pair","rawMessage":"The original message hash (without the Ethereum signed prefix) that was signed","s":"Half of the ECDSA signature pair","v":"The recovery byte of the signature"}},"constructor":{"details":"This chain ID must be included in the off-chain signed message to prevent replay across chains"}},"version":1},"userdoc":{"kind":"user","methods":{"chainId()":{"notice":"The chain ID stored at deployment to include in signed messages"},"claim(bytes32,uint8,bytes32,bytes32)":{"notice":"Verifies a claim by checking the signature against the expected signer and message structure"},"constructor":{"notice":"Initializes the contract and captures the current chain ID"},"hasClaimed(address)":{"notice":"Tracks whether an address has already claimed"}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/Safe.sol":"Safe"},"evmVersion":"paris","libraries":{}},"sources":{"src/Safe.sol":{"keccak256":"0xbab61e5b0e63fbec17373bf15aa2d09960bbfd4b768e3c0932f0b485ef077199","urls":["bzz-raw://385e8798ca4f5c62cd3ea72d41db6096f6c7fd9c1e6b3d44dd653bf45c16b6f8","dweb:/ipfs/Qme3ftS4NsK6js9Bi1DoAxQFqbgcvtCJh47ReTVk9xU3i7"],"license":"MIT"}},"version":1},"id":18}